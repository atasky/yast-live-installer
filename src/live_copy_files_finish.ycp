/**
 * File:
 *  copy_files_finish.ycp
 *
 * Module:
 *  Step of base installation finish
 *
 * Authors:
 *  Jiri Srain <jsrain@suse.cz>
 *
 * $Id: copy_files_finish.ycp 38430 2007-06-13 13:50:38Z locilka $
 *
 */

{

textdomain "installation";

import "Installation";
import "Directory";
import "ProductControl";
import "FileUtils";
import "String";
import "SystemFilesCopy";

include "installation/misc.ycp";

any ret = nil;
string func = "";
map param = $[];

/* Check arguments */
if(size(WFM::Args()) > 0 && is(WFM::Args(0), string)) {
    func = (string)WFM::Args(0);
    if(size(WFM::Args()) > 1 && is(WFM::Args(1), map))
	param = (map)WFM::Args(1);
}

y2milestone ("live_starting copy_files_finish");
y2debug("func=%1", func);
y2debug("param=%1", param);

if (func == "Info")
{
    return (any)$[
	"steps" : 1,
	// progress step title
	"title" : _("Copying files to installed system..."),
	"when" : [ `installation, `update, `autoinst ],
    ];
}
else if (func == "Write")
{
    // bugzilla #221815
    // Adding blacklisted modules into the /etc/modprobe.d/blacklist
    // This should run before the SCR::switch function
    AdjustModprobeBlacklist();

    // Copy control.xml so it can be read once again during continue mode
    SCR::Execute (.target.bash, "/bin/cp " + ProductControl::current_control_file  + " " +
	"'" + String::Quote (Installation::destdir) + Directory::etcdir + "/control.xml'");
    SCR::Execute (.target.bash, "/bin/chmod 0644 " +
	"'" + String::Quote (Installation::destdir) + Directory::etcdir + "/control.xml'");

    // Copy files from inst-sys to the just installed system
    // FATE #301937, items are defined in the control file
    SystemFilesCopy::SaveInstSysContent();

    // Remove old eula.txt
    // bugzilla #208908
    string eula_txt = sformat ("%1%2/eula.txt", Installation::destdir, Directory::etcdir);
    if (FileUtils::Exists (eula_txt)) {
	SCR::Execute (.target.remove, eula_txt);
    }

    // Copy info.txt so it can be used in firstboot (new eula.txt)
    if (FileUtils::Exists ("/info.txt"))
    {
	SCR::Execute (.target.bash, sformat("/bin/cp /info.txt %1", eula_txt));
    }
}
else
{
    y2error ("unknown function: %1", func);
    ret = nil;
}

y2debug("ret=%1", ret);
y2milestone("live_copy_files_finish finished");
return ret;


} /* EOF */
